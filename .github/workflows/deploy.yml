name: Deploy to NPM

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      custom_version:
        description: 'Custom version (optional, overrides version_type)'
        required: false
        type: string
      dry_run:
        description: 'Dry run (skip actual publish)'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    name: Deploy Package
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run all checks
        run: |
          pnpm run typecheck
          pnpm run check
          pnpm run build
          pnpm run test

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Update version (custom)
        if: ${{ inputs.custom_version != '' }}
        run: |
          pnpm version ${{ inputs.custom_version }} --no-git-tag-version
          echo "NEW_VERSION=${{ inputs.custom_version }}" >> $GITHUB_ENV

      - name: Update version (bump)
        if: ${{ inputs.custom_version == '' }}
        run: |
          NEW_VERSION=$(pnpm version ${{ inputs.version_type }} --no-git-tag-version | sed 's/v//')
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create release commit and tag
        run: |
          git add package.json
          git commit -m "chore(release): v${{ env.NEW_VERSION }}"
          git tag "v${{ env.NEW_VERSION }}"

      - name: Push changes
        if: ${{ !inputs.dry_run }}
        run: |
          git push origin main
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Publish to NPM (dry run)
        if: ${{ inputs.dry_run }}
        run: pnpm publish --dry-run --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM
        if: ${{ !inputs.dry_run }}
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: ${{ !inputs.dry_run }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: v${{ env.NEW_VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: false